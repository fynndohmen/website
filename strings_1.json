[
  {
    "title": "Checking if a String is a Palindrome",
    "content": [
        "This Python function determines whether a given string is a palindrome."
    ],
    "images": [
        "algorithms_pics/palindrome_check.png"
    ],
    "description": [
        "A palindrome is a word, phrase, or sequence that reads the same forward and backward.",
        "This function checks for palindromes by comparing characters from the beginning and end of the string.",
        "1. The function first converts the string into a list of characters.",
        "2. It iterates through the first half of the string, comparing each character with its corresponding character from the end.",
        "3. If any pair does not match, the function returns `False`, indicating the string is not a palindrome.",
        "4. If all characters match, the function returns `True`, confirming the string is a palindrome."
    ],
    "date": "2025-01-14"
},
{
    "title": "Encrypting Text with Caesar Cipher in Python",
    "content": [
        "This Python function implements the Caesar Cipher encryption technique, shifting each letter in a string by a given key."
    ],
    "images": ["algorithms_pics/caesar_cipher.png"],
    "description": [
        "### How the Caesar Cipher Works:",
        "1. **Letter Shifting:**",
        "   - Each letter in the string is shifted forward by a given key value.",
        "   - If the end of the alphabet is reached, the shifting continues from the beginning (e.g., 'z' with a shift of 2 becomes 'b').",
        "2. **Modulo Operation:**",
        "   - To keep shifts within the bounds of the alphabet, the function uses modulo `26`.",
        "3. **ASCII Manipulation:**",
        "   - The function converts each character into its ASCII code using `ord()`, modifies it, and converts it back using `chr()`. This ensures an efficient transformation."
    ],
    "date": "2025-01-15"
},
{
    "title": "Run-Length Encoding in Python",
    "content": [
        "This Python function compresses a string using run-length encoding (RLE), a simple form of data compression."
    ],
    "images": ["algorithms_pics/run_length_encoding.png"],
    "description": [
        "### How Run-Length Encoding Works:",
        "1. **Concept:** Run-length encoding replaces consecutive duplicate characters in a string with a count followed by the character itself.",
        "2. **Processing the String:**",
        "   - The function iterates through the string, counting consecutive identical characters.",
        "   - If the sequence exceeds 9 characters, it is split into multiple segments since a single digit is used to represent the count.",
        "3. **Output Format:** The compressed string consists of alternating numbers and characters representing the character count and the character itself."
    ],
    "date": "2025-01-16"
},
  {
    "title": "Finding Common Characters in Multiple Strings",
    "content": [
        "This Python function identifies characters that appear in every string within a given list."
    ],
    "images": ["algorithms_pics/common_characters.png"],
    "description": [
        "### How the Function Works:",
        "1. **Initializing the Character Set:**",
        "   - The function starts with a set of characters from the first string.",
        "2. **Finding Common Characters:**",
        "   - It iterates through the remaining strings and keeps only the characters that exist in all of them.",
        "3. **Returning the Result:**",
        "   - The final set of common characters is converted to a list and returned."
    ],
    "date": "2025-01-17"
},
  {
    "title": "Checking if a Document Can Be Created from Given Characters",
    "content": [
        "This Python function verifies whether a given document can be formed using characters from a provided string."
    ],
    "images": ["algorithms_pics/generate_document.png"],
    "description": [
        "### Explanation of the Function:",
        "1. **Character Frequency Count:**",
        "   - The function first counts the occurrences of each character in the `characters` string and stores them in a dictionary.",
        "2. **Verification Process:**",
        "   - It then iterates through the `document` string, checking if each character is available in sufficient quantity.",
        "3. **Handling Character Shortages:**",
        "   - If a required character is missing or insufficient, the function immediately returns `False`.",
        "4. **Reducing Character Counts:**",
        "   - If a character is found in the `characters` string, its count is reduced to reflect that it has been used.",
        "5. **Final Result:**",
        "   - If all characters in the document can be matched with available characters, the function returns `True`."
    ],
    "date": "2025-02-18"
}
]
